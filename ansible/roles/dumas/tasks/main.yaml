- name: add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: add the GitLab runner package repository
  shell: "curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash"

- name: add apt repositories
  apt_repository:
    repo: '{{ item }}'
  with_items:
    - ppa:certbot/certbot
    - ppa:nginx/stable
    - deb http://archive.ubuntu.com/ubuntu/ bionic universe

- name: update apt cache
  apt:
    update_cache: yes

- name: install docker, gitlab-runner, â€¦
  apt:
    pkg:
      - certbot
      - docker-ce
      - gitlab-runner
      - nginx
      - python3-bcrypt
      - python3-certbot-dns-cloudflare
      - python3-passlib
      - software-properties-common

- name: unregister all previously used GitLab runners
  shell: gitlab-runner unregister --all-runners

- name: add gitlab-runner user to docker group
  user:
    name: gitlab-runner
    groups: docker
    append: yes
  become: true

- name: register GitLab runners using Docker executor for Docker socket binding
  shell: "gitlab-runner register --non-interactive --url '{{ gitlab_url }}' --registration-token '{{ gitlab_runner_registration_token }}' --description 'docker-socket-runner-{{ item }}' --executor docker --docker-image 'docker:stable' --docker-volumes /var/run/docker.sock:/var/run/docker.sock --tag-list docker,socket"
  loop: "{{ range(1,gitlab_runner_count + 1)|list }}"

- name: set concurrent number of runners in gitlab-runner config
  ini_file:
    path: /etc/gitlab-runner/config.toml
    section:
    option: concurrent
    value: "{{ gitlab_runner_count }}"

- name: Retrieve all registered GitLab runners
  shell: gitlab-runner list
  register: runner_result

- name: show all registered GitLab runners
  debug:
    msg:
      - "{{runner_result.stderr_lines}}"

- name: download mc binary (Minio)
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc

- name: set exec permission for mc (Minio)
  file:
    path: /usr/local/bin/mc
    state: file
    mode: +x

- name: generate htpasswd for registry
  notify: restart registry
  htpasswd:
    path: /etc/docker/registry/auth
    name: registry
    password: wPf3kzeUcNfwnwCs
    crypt_scheme: bcrypt

- name: configure registry
  notify: restart registry
  copy:
    src: registry-config.yml
    dest: /etc/docker/registry/config.yml

- name: create registry service
  notify:
    - reload systemd
    - restart registry
  copy:
    src: registry.service
    dest: /etc/systemd/system/registry.service

- name: flush handlers
  meta: flush_handlers

- name: enable registry
  systemd:
    name: registry
    enabled: yes

- name: remove default site configuration for nginx
  file:
    dest: /etc/nginx/sites-enabled/default
    state: absent

- name: configure nginx
  copy:
    src: chatalk.fr.conf
    dest: /etc/nginx/sites-enabled/chatalk.fr.conf

- name: restart nginx
  service:
    name: nginx
    state: restarted
